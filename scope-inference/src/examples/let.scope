language Test {
  (Lambda param body) {
    import param;
    import body;
    bind param in body;
  }
  (Param param params) {
    import param;
    import params;
    export param;
    export params;
  }
  (Arg arg args) {
    import arg;
    import args;
  }
  (Apply func arg) {
    import func;
    import arg;
  }
  (Begin body) {
    import body;
  }

  sugar (Let binds body)
  sugar (Bind name defn binds)
  sugar (EndBinds)

  rule (Let binds body)
    => (DesugarLet binds body (End) (End))

  rule (DesugarLet (Bind x defn binds) body params args)
    => (DesugarLet binds body (Param x params) (Arg defn args))

  rule (DesugarLet (End) body params args)
    => (Apply (Lambda params body) args)

}