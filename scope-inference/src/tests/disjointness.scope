(* Should fail! *)

language Test {
  (Lambda param body) {
    import param;
    import body;
    bind param in body;
  }
  (Apply func arg) {
    import func;
    import arg;
  }
  (Begin body) {
    import body;
  }
  (Void) {}
  
  sugar (Let binds body)
  sugar (Bind name defn binds) {
    disjoint import name;
    disjoint bind name in binds;
  }
  sugar (EndBinds)

  sugar (TestDisjoint)

  (* Desugars like let-star, but requires distinct names *)

  rule (Let (Bind a b c) d)
    => (Apply (Lambda a (Let c d)) b)
  
  rule (Let (EndBinds) a)
    => (Begin a)

  rule (TestDisjoint)
    => (Let (Bind @same_var (Void) (Bind @same_var (Void) (EndBinds))) (Void))
}